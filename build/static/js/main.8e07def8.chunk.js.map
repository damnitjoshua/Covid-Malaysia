{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","latest","setLatest","useEffect","axios","all","get","then","responseArr","data","catch","err","console","log","lastUpdated","Date","parseInt","updated","toString","className","href","cases","recovered","deaths","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"iQAwGeA,MApGf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,IACGC,IAAI,CACHD,IAAME,IAAI,qDAEXC,MAAK,SAACC,GACLN,EAAUM,EAAY,GAAGC,SAE1BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEH,IACMG,EADO,IAAIC,KAAKC,SAASf,EAAOgB,UACbC,WAEzB,OACE,yBAAKC,UAAU,OACb,8BACE,6BACE,uBAAGC,KAAK,GAAGD,UAAU,QAAQL,GAC7B,uBAAGM,KAAK,SAASD,UAAU,aAA3B,UAGF,wBAAIA,UAAU,UAAd,uDAEA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SACb,4BAAKlB,EAAOoB,MAAM,6BAAS,+CAE7B,yBAAKF,UAAU,SACb,4BAAKlB,EAAOqB,UAAU,6BAAS,yCAEjC,yBAAKH,UAAU,SACb,4BAAKlB,EAAOsB,OAAO,6BAAS,2CAIhC,yBAAKJ,UAAU,gBACb,wCACA,kNAG4C,6BAC1C,6BAJF,yBAKwB,6BALxB,eAMS,6BANT,eAOS,6BAPT,mBAQa,6BARb,8CAYA,8CACA,qQAMA,0CACA,2CACc,6BADd,2BAE0B,6BAF1B,yBAGwB,6BAHxB,yBAIwB,6BAJxB,8BAK6B,6BAL7B,0BAMyB,8BAGzB,yCACA,kQAOF,yBAAKA,UAAU,cACb,wBAAIK,GAAG,SAAP,SACA,4QAGkF,6BAChF,6BAJF,YAKW,6BALX,KAMI,uBAAGJ,KAAK,qEAAR,SAAqF,6BANzF,KAOI,uBAAGA,KAAK,6BAAR,YAAgD,6BAClD,6BARF,6CC3EUK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9B,MAAK,SAAA+B,GACJA,EAAaC,gBAEd7B,OAAM,SAAA8B,GACL5B,QAAQ4B,MAAMA,EAAMC,c","file":"static/js/main.8e07def8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n\n  const [latest, setLatest] = useState([]);\n\n  useEffect(() => {\n    axios\n      .all([\n        axios.get(\"https://corona.lmao.ninja/v2/countries/malaysia\"),\n      ])\n      .then((responseArr) => {\n        setLatest(responseArr[0].data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n\n  return (\n    <div className=\"App\">\n      <main>\n        <nav>\n          <a href=\"\" className=\"logo\">{lastUpdated}</a>\n          <a href=\"#about\" className=\"rightlink\">About</a>\n        </nav>\n\n        <h1 className=\"header\">Daily updates on the Covid-19 outbreak in Malaysia.</h1>\n\n        <div className=\"numflex\">\n          <div className=\"flex1\">\n            <h2>{latest.cases}<br></br><span>total cases</span></h2>\n          </div>\n          <div className=\"flex2\">\n            <h2>{latest.recovered}<br></br><span>cured</span></h2>\n          </div>\n          <div className=\"flex3\">\n            <h2>{latest.deaths}<br></br><span>deaths</span></h2>\n          </div>\n        </div>\n\n        <div className=\"cont section\">\n          <h2>Symptoms</h2>\n          <h3>\n            The most common symptoms of coronavirus disease (COVID-19) are fever, \n            tiredness, and dry cough. Most people (about 80%) recover from the \n            disease without needing special treatment.<br></br>\n            <br></br>\n            People may experience:<br></br>\n            • cough<br></br>\n            • fever<br></br>\n            • tiredness<br></br>\n            • difficulty breathing (severe cases)\n          </h3>\n\n          <h2>How it spreads</h2>\n          <h3>\n            Coronavirus disease spreads primarily through contact with an infected person \n            when they cough or sneeze. It also spreads when a person touches a surface or \n            object that has the virus on it, then touches their eyes, nose, or mouth.\n          </h3>\n\n          <h2>Prevention</h2>\n          <h3>\n            Do the five:<br></br>\n            1. HANDS Wash them often<br></br>\n            2. ELBOW Cough into it<br></br>\n            3. FACE Don't touch it<br></br>\n            4. SPACE Keep safe distance<br></br>\n            5. HOME Stay if you can<br></br>\n          </h3>\n\n          <h2>Treatment</h2>\n          <h3>\n            There is no specific medicine to prevent or treat coronavirus disease (COVID-19).\n            People may need supportive care to help them breathe. If you develop a fever, cough, \n            and have difficulty breathing, promptly seek medical care.\n          </h3>\n        </div>\n\n        <div className=\"cont about\">\n          <h2 id=\"about\">About</h2>\n          <h3>\n            The purpose of this website is to help inform the people of Malaysia about \n            the current situation of the Covid-19 outbreak. Time and date of update are shown\n            uptop on the left side of the navigation bar. Thanks for visiting and stay safe.<br></br>\n            <br></br>\n            Feedback:<br></br>\n            - <a href=\"mailto:joshuachew8118@gmail.com?Subject=Covid-19 website feedback\">Email</a><br></br>\n            - <a href=\"https://t.me/damnitjoshua\">Telegram</a><br></br>\n            <br></br>\n            Made with ❤️ by Joshua Chew\n          </h3>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}